@inproceedings{Raft, author = {Ongaro, Diego and Ousterhout, John}, title = {In search of an understandable consensus algorithm}, year = {2014}, isbn = {9781931971102}, publisher = {USENIX Association}, address = {USA}, abstract = {Raft is a consensus algorithm for managing a replicated log. It produces a result equivalent to (multi-)Paxos, and it is as efficient as Paxos, but its structure is different from Paxos; this makes Raft more understandable than Paxos and also provides a better foundation for building practical systems. In order to enhance understandability, Raft separates the key elements of consensus, such as leader election, log replication, and safety, and it enforces a stronger degree of coherency to reduce the number of states that must be considered. Results from a user study demonstrate that Raft is easier for students to learn than Paxos. Raft also includes a new mechanism for changing the cluster membership, which uses overlapping majorities to guarantee safety.}, booktitle = {Proceedings of the 2014 USENIX Conference on USENIX Annual Technical Conference}, pages = {305â€“320}, numpages = {16}, location = {Philadelphia, PA}, series = {USENIX ATC'14} }

@misc{luck_redis_2019,
	title = {Redis {Load} {Handling} vs {Data} {Integrity}: {Tradeoffs} in {Distributed} {Data} {Store} {Design}},
	shorttitle = {Redis {Load} {Handling} vs {Data} {Integrity}},
	url = {https://hazelcast.com/blog/redis-load-handling-vs-data-integrity/},
	abstract = {A detailed exploration into how Redis loses data under load and the tradeoffs in the design approaches of distributed data stores.},
	language = {en-US},
	urldate = {2025-06-27},
	journal = {Hazelcast},
	author = {Luck, Greg},
	month = sep,
	year = {2019},
}
